export declare const CharacterQuery = "\nquery ($id: Int) {\n  Character(id: $id) {\n    id\n    name {\n      first\n      last\n      full\n      native\n      alternative\n    }\n    image {\n      large\n      medium\n    }\n    description\n    isFavourite\n    siteUrl\n    media {\n      edges {\n        node {\n          id\n          title {\n            romaji\n            english\n            native\n            userPreferred\n          }\n        }\n      }\n      pageInfo {\n        total\n        perPage\n        currentPage\n        lastPage\n        hasNextPage\n      }\n    }\n    favourites\n    modNotes\n  }\n}\n";
export declare const CharacterSearchQuery = "\nquery ($search: String, $sort: [CharacterSort], $page: Int, $perPage: Int) {\n  Page(page: $page, perPage: $perPage) {\n    pageInfo {\n      total\n      perPage\n      currentPage\n      lastPage\n      hasNextPage\n    }\n    Results: characters(search: $search, sort: $sort) {\n      id\n      name {\n        first\n        last\n        full\n        native\n        alternative\n      }\n      image {\n        large\n        medium\n      }\n      description\n      isFavourite\n      siteUrl\n      media {\n        edges {\n          node {\n            id\n            title {\n              romaji\n              english\n              native\n              userPreferred\n            }\n          }\n        }\n        pageInfo {\n          total\n          perPage\n          currentPage\n          lastPage\n          hasNextPage\n        }\n      }\n      favourites\n      modNotes\n    }\n  }\n}\n";
export declare const MediaQuery = "\nquery ($id: Int) {\n    Media(id: $id) {\n      id\n      title {\n        romaji\n        english\n        native\n      }\n      startDate {\n        year\n        month\n        day\n      }\n      endDate {\n        year\n        month\n        day\n      }\n      favourites\n      coverImage {\n        extraLarge\n        large\n        color\n      }\n      characters {\n        edges {\n          node {\n            id\n            name {\n              first\n              last\n              full\n              native\n            }\n          }\n          role\n        }\n        pageInfo {\n          total\n          perPage\n          hasNextPage\n          currentPage\n          lastPage\n        }\n      }\n      staff {\n        edges {\n          node {\n            id\n            name {\n              first\n              last\n              full\n              native\n            }\n          }\n        }\n        pageInfo {\n          total\n          perPage\n          hasNextPage\n          currentPage\n          lastPage\n        }\n      }\n      relations {\n        edges {\n          node {\n            id\n            isAdult\n            title {\n              romaji\n              english\n              native\n            }\n            format\n            type\n            coverImage {\n              large\n            }\n          }\n          relationType\n        }\n      }\n      studios {\n        edges {\n          node {\n            id\n            name\n          }\n          isMain\n        }\n      }\n      recommendations {\n        edges {\n          node {\n            id\n            rating\n            userRating\n            user {\n              id\n              name\n            }\n          }\n        }\n        pageInfo {\n          total\n          perPage\n          hasNextPage\n          currentPage\n          lastPage\n        }\n      }\n      bannerImage\n      duration\n      format\n      type\n      status\n      episodes\n      chapters\n      volumes\n      season\n      description\n      averageScore\n      meanScore\n      popularity\n      genres\n      siteUrl\n      isFavourite\n      countryOfOrigin\n      isLicensed\n      synonyms\n      trending\n      rankings {\n        id\n        rank\n        type\n        format\n        year\n        season\n        allTime\n        context\n      }\n      stats {\n        scoreDistribution {\n          score\n          amount\n        }\n        statusDistribution {\n          status\n          amount\n        }\n        airingProgression {\n          episode\n          score\n          watching\n        }\n      }\n      tags {\n        id\n        name\n        description\n        isGeneralSpoiler\n        isMediaSpoiler\n        rank\n      }\n      nextAiringEpisode {\n        airingAt\n        timeUntilAiring\n        episode\n      }\n      streamingEpisodes {\n        title\n        thumbnail\n        url\n        site\n      }\n      reviews {\n        pageInfo {\n          total\n          perPage\n          hasNextPage\n          currentPage\n          lastPage\n        }\n      }\n      mediaListEntry {\n        user {\n          mediaListOptions {\n            scoreFormat\n            animeList {\n              advancedScoring\n              advancedScoringEnabled\n              customLists\n            }\n            mangaList {\n              advancedScoring\n              advancedScoringEnabled\n              customLists\n            }\n          }\n        }\n        id\n        status\n        score\n        progress\n        progressVolumes\n        repeat\n        priority\n        private\n        notes\n        hiddenFromStatusLists\n        customLists(asArray: true)\n        advancedScores\n        startedAt {\n          year\n          month\n          day\n        }\n        completedAt {\n          year\n          month\n          day\n        }\n        updatedAt\n        createdAt\n      }\n    }\n  }  \n";
export declare const MediaSearchQuery = "\nquery ($search: String, $page: Int, $perPage: Int, $sort: [MediaSort], $type: MediaType, $season: MediaSeason, $seasonYear: Int, $format: MediaFormat, $status: MediaStatus, $isAdult: Boolean, $source: MediaSource, $countryOfOrigin: CountryCode, $licensedBy: String, $id_in: [Int], $id_not_in: [Int], $id: Int, $idMal: Int, $startDate: FuzzyDateInt, $endDate: FuzzyDateInt, $episodes: Int, $duration: Int, $chapters: Int, $volumes: Int, $genre: String, $tag: String, $minimumTagRank: Int, $tagCategory: String, $onList: Boolean, $averageScore: Int, $id_not: Int, $idMal_not: Int, $idMal_in: [Int], $idMal_not_in: [Int], $startDate_greater: FuzzyDateInt, $startDate_lesser: FuzzyDateInt, $startDate_like: String, $popularity: Int, $endDate_greater: FuzzyDateInt, $endDate_like: String, $format_in: [MediaFormat], $format_not: MediaFormat, $format_not_in: [MediaFormat], $status_in: [MediaStatus], $status_not: MediaStatus, $status_not_in: [MediaStatus], $episodes_greater: Int, $episodes_lesser: Int, $duration_greater: Int, $duration_lesser: Int, $chapters_greater: Int, $chapters_lesser: Int, $volumes_greater: Int, $volumes_lesser: Int, $genre_in: [String], $genre_not_in: [String], $tag_in: [String], $tag_not_in: [String], $tagCategory_in: [String], $tagCategory_not_in: [String], $endDate_lesser: FuzzyDateInt, $licensedBy_in: [String], $averageScore_not: Int, $averageScoreGreater: Int, $averageScore_lesser: Int, $popularity_not: Int, $popularity_greater: Int, $popularity_lesser: Int, $source_in: [MediaSource]) {\n  Page(page: $page, perPage: $perPage) {\n    pageInfo {\n      total\n      perPage\n      currentPage\n      lastPage\n      hasNextPage\n    }\n    Results: media(id: $id, idMal: $idMal, startDate: $startDate, endDate: $endDate, season: $season, seasonYear: $seasonYear, type: $type, format: $format, status: $status, episodes: $episodes, duration: $duration, chapters: $chapters, volumes: $volumes, isAdult: $isAdult, genre: $genre, tag: $tag, minimumTagRank: $minimumTagRank, tagCategory: $tagCategory, onList: $onList, licensedBy: $licensedBy, averageScore: $averageScore, popularity: $popularity, source: $source, countryOfOrigin: $countryOfOrigin, search: $search, id_not: $id_not, id_in: $id_in, id_not_in: $id_not_in, idMal_not: $idMal_not, idMal_in: $idMal_in, idMal_not_in: $idMal_not_in, startDate_greater: $startDate_greater, startDate_lesser: $startDate_lesser, startDate_like: $startDate_like, endDate_greater: $endDate_greater, endDate_lesser: $endDate_lesser, endDate_like: $endDate_like, format_in: $format_in, format_not: $format_not, format_not_in: $format_not_in, status_in: $status_in, status_not: $status_not, status_not_in: $status_not_in, episodes_greater: $episodes_greater, episodes_lesser: $episodes_lesser, duration_greater: $duration_greater, duration_lesser: $duration_lesser, chapters_greater: $chapters_greater, chapters_lesser: $chapters_lesser, volumes_greater: $volumes_greater, volumes_lesser: $volumes_lesser, genre_in: $genre_in, genre_not_in: $genre_not_in, tag_in: $tag_in, tag_not_in: $tag_not_in, tagCategory_in: $tagCategory_in, tagCategory_not_in: $tagCategory_not_in, licensedBy_in: $licensedBy_in, averageScore_not: $averageScore_not, averageScore_greater: $averageScoreGreater, averageScore_lesser: $averageScore_lesser, popularity_not: $popularity_not, popularity_greater: $popularity_greater, popularity_lesser: $popularity_lesser, source_in: $source_in, sort: $sort) {\n      id\n      title {\n        romaji\n        english\n        native\n      }\n      startDate {\n        year\n        month\n        day\n      }\n      endDate {\n        year\n        month\n        day\n      }\n      favourites\n      coverImage {\n        extraLarge\n        large\n        color\n      }\n      characters {\n        edges {\n          node {\n            id\n            name {\n              first\n              last\n              full\n              native\n            }\n          }\n          role\n        }\n        pageInfo {\n          total\n          perPage\n          hasNextPage\n          currentPage\n          lastPage\n        }\n      }\n      staff {\n        edges {\n          node {\n            id\n            name {\n              first\n              last\n              full\n              native\n            }\n          }\n        }\n        pageInfo {\n          total\n          perPage\n          hasNextPage\n          currentPage\n          lastPage\n        }\n      }\n      relations {\n        edges {\n          node {\n            id\n            isAdult\n            title {\n              romaji\n              english\n              native\n            }\n            format\n            type\n            coverImage {\n              large\n            }\n          }\n          relationType\n        }\n      }\n      studios {\n        edges {\n          node {\n            id\n            name\n          }\n          isMain\n        }\n      }\n      recommendations {\n        edges {\n          node {\n            id\n            rating\n            userRating\n            user {\n              id\n              name\n            }\n          }\n        }\n        pageInfo {\n          total\n          perPage\n          hasNextPage\n          currentPage\n          lastPage\n        }\n      }\n      bannerImage\n      duration\n      format\n      type\n      status\n      episodes\n      chapters\n      volumes\n      season\n      description\n      averageScore\n      meanScore\n      popularity\n      genres\n      siteUrl\n      isFavourite\n      countryOfOrigin\n      isLicensed\n      synonyms\n      trending\n      rankings {\n        id\n        rank\n        type\n        format\n        year\n        season\n        allTime\n        context\n      }\n      stats {\n        scoreDistribution {\n          score\n          amount\n        }\n        statusDistribution {\n          status\n          amount\n        }\n        airingProgression {\n          episode\n          score\n          watching\n        }\n      }\n      tags {\n        id\n        name\n        description\n        isGeneralSpoiler\n        isMediaSpoiler\n        rank\n      }\n      nextAiringEpisode {\n        airingAt\n        timeUntilAiring\n        episode\n      }\n      streamingEpisodes {\n        title\n        thumbnail\n        url\n        site\n      }\n      reviews {\n        pageInfo {\n          total\n          perPage\n          hasNextPage\n          currentPage\n          lastPage\n        }\n      }\n      mediaListEntry {\n        user {\n          mediaListOptions {\n            scoreFormat\n            animeList {\n              advancedScoring\n              advancedScoringEnabled\n              customLists\n            }\n            mangaList {\n              advancedScoring\n              advancedScoringEnabled\n              customLists\n            }\n          }\n        }\n        id\n        status\n        score\n        progress\n        progressVolumes\n        repeat\n        priority\n        private\n        notes\n        hiddenFromStatusLists\n        customLists(asArray: true)\n        advancedScores\n        startedAt {\n          year\n          month\n          day\n        }\n        completedAt {\n          year\n          month\n          day\n        }\n        updatedAt\n        createdAt\n      }\n    }\n  }\n}\n";
export declare const StaffQuery = "\nquery ($id: Int) {\n    Staff(id: $id) {\n      id\n      name {\n        first\n        last\n        full\n        native\n      }\n      language\n      image {\n        large\n        medium\n      }\n      description\n      isFavourite\n      siteUrl\n      staffMedia {\n        edges {\n          node {\n            id\n            title {\n              romaji\n              english\n              native\n              userPreferred\n            }\n          }\n        }\n      }\n      characters {\n        edges {\n          node {\n            id\n            name {\n              first\n              last\n              full\n              native\n            }\n          }\n          role\n        }\n      }\n      characterMedia {\n        edges {\n          node {\n            id\n            title {\n              romaji\n              english\n              native\n              userPreferred\n            }\n          }\n        }\n      }\n      submitter {\n        id\n        name\n      }\n      submissionStatus\n      submissionNotes\n      favourites\n      modNotes\n    }\n  }\n";
export declare const StaffSearchQuery = "\nquery ($id: Int, $page: Int, $perPage: Int, $search: String, $id_not: Int, $id_in: [Int], $id_not_in: [Int], $sort: [StaffSort]) {\n    Page(page: $page, perPage: $perPage) {\n      pageInfo {\n        total\n        perPage\n        currentPage\n        lastPage\n        hasNextPage\n      }\n      Results: staff(id: $id, search: $search, id_not: $id_not, id_in: $id_in, id_not_in: $id_not_in, sort: $sort) {\n        id\n        name {\n          first\n          last\n          full\n          native\n        }\n        language\n        image {\n          large\n          medium\n        }\n        description\n        isFavourite\n        siteUrl\n        staffMedia {\n          edges {\n            node {\n              id\n              title {\n                romaji\n                english\n                native\n                userPreferred\n              }\n            }\n            relationType\n          }\n        }\n        characters {\n          edges {\n            node {\n              id\n              name {\n                first\n                last\n                full\n                native\n              }\n            }\n            role\n          }\n        }\n        characterMedia {\n          edges {\n            node {\n              id\n              title {\n                romaji\n                english\n                native\n                userPreferred\n              }\n            }\n          }\n        }\n        submitter {\n          id\n          name\n        }\n        submissionStatus\n        submissionNotes\n        favourites\n        modNotes\n      }\n    }\n  }\n";
export declare const StudioQuery = "\nquery ($id: Int) {\n    Studio(id: $id) {\n      id\n      name\n      isAnimationStudio\n      media {\n        edges {\n          node {\n            id\n            title {\n              romaji\n              english\n              native\n              userPreferred\n            }\n          }\n          isMainStudio\n        }\n      }\n      siteUrl\n      isFavourite\n      favourites\n    }\n  }\n";
export declare const StudioSearchQuery = "\nquery ($id: Int, $page: Int, $perPage: Int, $search: String, $id_not: Int, $id_in: [Int], $id_not_in: [Int], $sort: [StudioSort]) {\n    Page(page: $page, perPage: $perPage) {\n      pageInfo {\n        total\n        perPage\n        currentPage\n        lastPage\n        hasNextPage\n      }\n      Results: studios(id: $id, search: $search, id_not: $id_not, id_in: $id_in, id_not_in: $id_not_in, sort: $sort) {\n        id\n        name\n        isAnimationStudio\n        media {\n          edges {\n            node {\n              id\n              title {\n                romaji\n                english\n                native\n                userPreferred\n              }\n            }\n            isMainStudio\n          }\n        }\n        siteUrl\n        isFavourite\n        favourites\n      }\n    }\n  }\n";
export declare const UserQuery = "\nquery ($id: Int) {\n    User(id: $id) {\n      id\n      name\n      about\n      avatar {\n        large\n        medium\n      }\n      bannerImage\n      isFollowing\n      isFollower\n      isBlocked\n      bans\n      options {\n        titleLanguage\n        displayAdultContent\n        airingNotifications\n        profileColor\n      }\n      mediaListOptions {\n        scoreFormat\n        rowOrder\n        useLegacyLists\n        sharedTheme\n        sharedThemeEnabled\n      }\n      favourites {\n        anime {\n          pageInfo {\n            total\n            perPage\n            currentPage\n            lastPage\n            hasNextPage\n          }\n          edges {\n            node {\n              id\n              title {\n                romaji\n                english\n                native\n                userPreferred\n              }\n            }\n          }\n        }\n        manga {\n          pageInfo {\n            total\n            perPage\n            currentPage\n            lastPage\n            hasNextPage\n          }\n          edges {\t\n            node {\n              id\n              title {\n                romaji\n                english\n                native\n                userPreferred\n              }\n            }\n  \n          }\n        }\n        characters {\n          pageInfo {\n            total\n            perPage\n            currentPage\n            lastPage\n            hasNextPage\n          }\n          edges {\n            node {\n              id\n              name {\n                first\n                last\n                full\n                native\n              }\n            }\n          }\n        }\n        staff {\n          pageInfo {\n            total\n            perPage\n            currentPage\n            lastPage\n            hasNextPage\n          }\n          edges {\n            node {\n              id\n              name {\n                first\n                last\n                full\n                native\n              }\n            }\n          }\n        }\n        studios {\n          pageInfo {\n            total\n            perPage\n            currentPage\n            lastPage\n            hasNextPage\n          }\n          edges {\n            id\n          }\n        }\n      }\n      unreadNotificationCount\n      siteUrl\n      donatorTier\n      donatorBadge\n      moderatorStatus\n      updatedAt\n    }\n  }\n";
export declare const UserStatsQuery = "\nquery ($id: Int) {\n  User(id: $id) {\n    statistics {\n      anime {\n        count\n        meanScore\n        standardDeviation\n        minutesWatched\n        episodesWatched\n        chaptersRead\n        volumesRead\n        formats {\n          count\n          meanScore\n          minutesWatched\n          chaptersRead\n          mediaIds\n          format\n        }\n        statuses {\n          count\n          meanScore\n          minutesWatched\n          chaptersRead\n          mediaIds\n          status\n        }\n        scores {\n          count\n          meanScore\n          minutesWatched\n          chaptersRead\n          mediaIds\n          score\n        }\n        lengths {\n          count\n          meanScore\n          minutesWatched\n          chaptersRead\n          mediaIds\n          length\n        }\n        releaseYears {\n          count\n          meanScore\n          minutesWatched\n          chaptersRead\n          mediaIds\n          releaseYear\n        }\n        startYears {\n          count\n          meanScore\n          minutesWatched\n          chaptersRead\n          mediaIds\n          startYear\n        }\n        genres {\n          count\n          meanScore\n          minutesWatched\n          chaptersRead\n          mediaIds\n          genre\n        }\n        tags {\n          count\n          meanScore\n          minutesWatched\n          chaptersRead\n          mediaIds\n          tag {\n            id\n          }\n        }\n        countries {\n          count\n          meanScore\n          minutesWatched\n          chaptersRead\n          mediaIds\n          country\n        }\n        voiceActors {\n          count\n          meanScore\n          minutesWatched\n          chaptersRead\n          mediaIds\n          voiceActor {\n            id\n          }\n          characterIds\n        }\n        staff {\n          count\n          meanScore\n          minutesWatched\n          chaptersRead\n          mediaIds\n          staff {\n            id\n          }\n        }\n        studios {\n          count\n          meanScore\n          minutesWatched\n          chaptersRead\n          mediaIds\n          studio {\n            id\n          }\n        }\n      }\n      manga {\n        count\n        meanScore\n        standardDeviation\n        minutesWatched\n        episodesWatched\n        chaptersRead\n        volumesRead\n        formats {\n          count\n          meanScore\n          minutesWatched\n          chaptersRead\n          mediaIds\n          format\n        }\n        statuses {\n          count\n          meanScore\n          minutesWatched\n          chaptersRead\n          mediaIds\n          status\n        }\n        scores {\n          count\n          meanScore\n          minutesWatched\n          chaptersRead\n          mediaIds\n          score\n        }\n        lengths {\n          count\n          meanScore\n          minutesWatched\n          chaptersRead\n          mediaIds\n          length\n        }\n        releaseYears {\n          count\n          meanScore\n          minutesWatched\n          chaptersRead\n          mediaIds\n          releaseYear\n        }\n        startYears {\n          count\n          meanScore\n          minutesWatched\n          chaptersRead\n          mediaIds\n          startYear\n        }\n        genres {\n          count\n          meanScore\n          minutesWatched\n          chaptersRead\n          mediaIds\n          genre\n        }\n        tags {\n          count\n          meanScore\n          minutesWatched\n          chaptersRead\n          mediaIds\n          tag {\n            id\n          }\n        }\n        countries {\n          count\n          meanScore\n          minutesWatched\n          chaptersRead\n          mediaIds\n          country\n        }\n        voiceActors {\n          count\n          meanScore\n          minutesWatched\n          chaptersRead\n          mediaIds\n          voiceActor {\n            id\n          }\n          characterIds\n        }\n        staff {\n          count\n          meanScore\n          minutesWatched\n          chaptersRead\n          mediaIds\n          staff {\n            id\n          }\n        }\n        studios {\n          count\n          meanScore\n          minutesWatched\n          chaptersRead\n          mediaIds\n          studio {\n            id\n          }\n        }\n      }\n    }\n  }\n}\n";
export declare const UserSearchQuery = "\nquery ($id: Int, $name: String, $search: String, $sort: [UserSort], $page: Int, $perPage: Int) {\n    Page(page: $page, perPage: $perPage) {\n      pageInfo {\n        total\n        perPage\n        currentPage\n        lastPage\n        hasNextPage\n      }\n      Results: users(id: $id, name: $name, search: $search, sort: $sort) {\n        id\n        name\n        about\n        avatar {\n          large\n          medium\n        }\n        bannerImage\n        isFollowing\n        isFollower\n        isBlocked\n        bans\n        options {\n          titleLanguage\n          displayAdultContent\n          airingNotifications\n          profileColor\n        }\n        mediaListOptions {\n          scoreFormat\n          rowOrder\n          useLegacyLists\n          sharedTheme\n          sharedThemeEnabled\n        }\n        favourites {\n          anime {\n            pageInfo {\n              total\n              perPage\n              currentPage\n              lastPage\n              hasNextPage\n            }\n            edges {\n              node {\n                id\n                title {\n                  romaji\n                  english\n                  native\n                  userPreferred\n                }\n              }\n            }\n          }\n          manga {\n            pageInfo {\n              total\n              perPage\n              currentPage\n              lastPage\n              hasNextPage\n            }\n            edges {\n              node {\n                id\n                title {\n                  romaji\n                  english\n                  native\n                  userPreferred\n                }\n              }\n            }\n          }\n          characters {\n            pageInfo {\n              total\n              perPage\n              currentPage\n              lastPage\n              hasNextPage\n            }\n            edges {\n              node {\n                id\n                name {\n                  first\n                  last\n                  full\n                  native\n                }\n              }\n            }\n          }\n          staff {\n            pageInfo {\n              total\n              perPage\n              currentPage\n              lastPage\n              hasNextPage\n            }\n            edges {\n              node {\n                id\n                name {\n                  first\n                  last\n                  full\n                  native\n                }\n              }\n            }\n          }\n          studios {\n            pageInfo {\n              total\n              perPage\n              currentPage\n              lastPage\n              hasNextPage\n            }\n            edges {\n              id\n            }\n          }\n        }\n        unreadNotificationCount\n        siteUrl\n        donatorTier\n        donatorBadge\n        moderatorStatus\n        updatedAt\n      }\n    }\n  }      \n";
export declare const ViewerQuery = "\nquery {\n  Viewer {\n    id\n    name\n    about\n    avatar {\n      large\n      medium\n    }\n    bannerImage\n    isFollowing\n    isFollower\n    isBlocked\n    bans\n    options {\n      titleLanguage\n      displayAdultContent\n      airingNotifications\n      profileColor\n    }\n    mediaListOptions {\n      scoreFormat\n      rowOrder\n      useLegacyLists\n      sharedTheme\n      sharedThemeEnabled\n    }\n    favourites {\n      anime {\n        pageInfo {\n          total\n          perPage\n          currentPage\n          lastPage\n          hasNextPage\n        }\n        edges {\n          node {\n            id\n            title {\n              romaji\n              english\n              native\n              userPreferred\n            }\n          }\n        }\n      }\n      manga {\n        pageInfo {\n          total\n          perPage\n          currentPage\n          lastPage\n          hasNextPage\n        }\n        edges {\t\n          node {\n            id\n            title {\n              romaji\n              english\n              native\n              userPreferred\n            }\n          }\n\n        }\n      }\n      characters {\n        pageInfo {\n          total\n          perPage\n          currentPage\n          lastPage\n          hasNextPage\n        }\n        edges {\n          node {\n            id\n            name {\n              first\n              last\n              full\n              native\n            }\n          }\n        }\n      }\n      staff {\n        pageInfo {\n          total\n          perPage\n          currentPage\n          lastPage\n          hasNextPage\n        }\n        edges {\n          node {\n            id\n            name {\n              first\n              last\n              full\n              native\n            }\n          }\n        }\n      }\n      studios {\n        pageInfo {\n          total\n          perPage\n          currentPage\n          lastPage\n          hasNextPage\n        }\n        edges {\n          id\n        }\n      }\n    }\n    unreadNotificationCount\n    siteUrl\n    donatorTier\n    donatorBadge\n    moderatorStatus\n    updatedAt\n  }\n}\n";
